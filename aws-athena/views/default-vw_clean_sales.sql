-- View containing unique, filtered sales
CREATE OR REPLACE VIEW default.vw_clean_sales AS

WITH UNIQUE_SALES AS (

select DISTINCT
    FRIEND.PARID AS pin,
    SUBSTR(FRIEND.SALEDT, 1, 4) AS sale_year,
    township, class,
    SALEKEY AS sale_key,
	FRIEND.TRANSNO AS doc_no,
	INSTRTYP AS deed_type,
	SUBSTR(FRIEND.SALEDT, 1, 10) AS sale_date,
	FRIEND.PRICE AS sale_price,
	LOG(FRIEND.PRICE, 10) AS sale_price_log10,
	OLDOWN AS seller_name,
	OWN1 AS buyer_name,
	CASE
		WHEN SALETYPE = '0' THEN 'LAND'
		WHEN SALETYPE = '1' THEN 'LAND AND BUILDING'
	END AS SALE_TYPE
from iasworld.SALES FRIEND

LEFT JOIN (

select DISTINCT PARID, CLASS, SUBSTR(NBHD, 1, 2) AS township, TAXYR FROM iasworld.PARDAT

) TOWNS ON FRIEND.PARID = TOWNS.PARID AND SUBSTR(FRIEND.SALEDT, 1, 4) = TOWNS.TAXYR

LEFT JOIN (

select PARID, PRICE, TRANSNO,
       row_number() over(PARTITION BY PARID, SALEDT, PRICE ORDER BY PARID, SALEDT, PRICE) as lineNum
from iasworld.SALES
WHERE TRANSNO IS NOT NULL

) NO_DOUBLE_TRANSNO ON FRIEND.PARID = NO_DOUBLE_TRANSNO.PARID AND FRIEND.PRICE = NO_DOUBLE_TRANSNO.PRICE AND FRIEND.TRANSNO = NO_DOUBLE_TRANSNO.TRANSNO

INNER JOIN (

SELECT PARID, SALEDT, MAX(PRICE) AS MAX_PRICE FROM iasworld.SALES
WHERE TRANSNO IS NOT NULL
    GROUP BY PARID, SALEDT

) TUG ON FRIEND.PARID = TUG.PARID AND FRIEND.SALEDT = TUG.SALEDT AND FRIEND.PRICE = TUG.MAX_PRICE

LEFT JOIN (

select TRANSNO, COUNT(TRANSNO) AS DOUBLE_CHECK FROM iasworld.SALES WHERE TRANSNO IS NOT NULL AND NOPAR = 1 GROUP BY TRANSNO

) LAST_JOIN ON FRIEND.TRANSNO = LAST_JOIN.TRANSNO

WHERE FRIEND.TRANSNO IS NOT NULL
    --- NOPAR IS NUMBER OF PARCELS SOLD
	AND NOPAR = 1
	AND FRIEND.PRICE > 10000
	AND CAST(SUBSTR(FRIEND.SALEDT, 1, 4) AS INT) BETWEEN 1997 AND YEAR(current_date)
AND DOUBLE_CHECK  = 1
AND lineNum = 1
)

SELECT US.* FROM UNIQUE_SALES US

LEFT JOIN (

SELECT township, class,
AVG(sale_price_log10) - STDDEV(sale_price_log10) * 4 AS lower_lim,
AVG(sale_price_log10) + STDDEV(sale_price_log10) * 4 AS upper_lim
FROM UNIQUE_SALES
GROUP BY township, class

) SALES_FILTER ON US.township = SALES_FILTER.township AND US.class = SALES_FILTER.class

WHERE sale_price_log10 BETWEEN lower_lim AND upper_lim