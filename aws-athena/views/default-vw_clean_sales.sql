-- View containing unique, filtered sales
CREATE OR REPLACE VIEW default.vw_clean_sales AS

WITH UNIQUE_SALES AS (

SELECT DISTINCT
  SALES.PARID AS pin,
  SUBSTR(SALES.SALEDT, 1, 4) AS sale_year,
  township, class,
  SALEKEY AS sale_key,
	SALES.TRANSNO AS doc_no,
	INSTRTYP AS deed_type,
	SUBSTR(SALES.SALEDT, 1, 10) AS sale_date,
	SALES.PRICE AS sale_price,
	LOG(SALES.PRICE, 10) AS sale_price_log10,
	OLDOWN AS seller_name,
	OWN1 AS buyer_name,
	CASE
		WHEN SALETYPE = '0' THEN 'LAND'
		WHEN SALETYPE = '1' THEN 'LAND AND BUILDING'
	END AS SALE_TYPE
FROM iasworld.SALES

-- JOIN ON TOWNSHIP AND CLASS
LEFT JOIN (

SELECT DISTINCT PARID, CLASS, SUBSTR(NBHD, 1, 2) AS township, TAXYR FROM iasworld.PARDAT

) TOWNS ON
    SALES.PARID = TOWNS.PARID AND
    SUBSTR(SALES.SALEDT, 1, 4) = TOWNS.TAXYR

-- JOIN ON AND INDICATOR OF WHETHER A GIVEN TRANSACTION NUMBER IS THE FIRST ASSOCIATED WITH A SALE
LEFT JOIN (

SELECT
  PARID, PRICE, TRANSNO,
  row_number() over(PARTITION BY PARID, SALEDT, PRICE ORDER BY PARID, SALEDT, PRICE) as lineNum
FROM iasworld.SALES
WHERE TRANSNO IS NOT NULL

) DROP_EXTRA_TRANSNO ON
    SALES.PARID = DROP_EXTRA_TRANSNO.PARID AND
    SALES.PRICE = DROP_EXTRA_TRANSNO.PRICE AND
    SALES.TRANSNO = DROP_EXTRA_TRANSNO.TRANSNO

-- ONLY KEEP HIGHEST SALE PRICE WHEN MULTIPLE EXIST FOR ONE PIN ON A GIVEN SALE DATE
INNER JOIN (

SELECT
  PARID, SALEDT, MAX(PRICE) AS MAX_PRICE
FROM iasworld.SALES
WHERE TRANSNO IS NOT NULL
GROUP BY PARID, SALEDT

) HIGHEST_SP ON
    SALES.PARID = HIGHEST_SP.PARID AND
    SALES.SALEDT = HIGHEST_SP.SALEDT AND
    SALES.PRICE = HIGHEST_SP.MAX_PRICE

-- REMOVE TRANSACTION NUMBERS THAT SHOW UP MULTIPLE TIMES
LEFT JOIN (

SELECT
  TRANSNO, COUNT(TRANSNO) AS DUPLICATE_TRANSNOS
FROM iasworld.SALES
WHERE
  TRANSNO IS NOT NULL AND
  NOPAR = 1 GROUP BY TRANSNO

) DEDUPE_TRANSNO ON SALES.TRANSNO = DEDUPE_TRANSNO.TRANSNO

WHERE
  SALES.TRANSNO IS NOT NULL AND
    --- NOPAR IS NUMBER OF PARCELS SOLD
	NOPAR = 1 AND
	SALES.PRICE > 10000 AND
	CAST(SUBSTR(SALES.SALEDT, 1, 4) AS INT) BETWEEN 1997 AND YEAR(current_date) AND
  DUPLICATE_TRANSNOS  = 1 AND
  lineNum = 1 AND
  -- EXCLUDE QUIT CLAIMS, EXECUTOR DEEDS, BENEFICIAL INTERESTS
  INSTRTYP NOT IN ('03', '04', '06')
)

SELECT
  US.*
FROM UNIQUE_SALES US

-- JOIN ON LOWER AND UPPER BOUNDS SO THAT OUTLIER SALES CAN BE FILTERED OUT OF SAMPLE
LEFT JOIN (

SELECT
  township, class,
  AVG(sale_price_log10) - STDDEV(sale_price_log10) * 4 AS lower_lim,
  AVG(sale_price_log10) + STDDEV(sale_price_log10) * 4 AS upper_lim
FROM UNIQUE_SALES
GROUP BY township, class

) SALES_FILTER ON
    US.township = SALES_FILTER.township AND
    US.class = SALES_FILTER.class

WHERE
  sale_price_log10 BETWEEN lower_lim AND upper_lim