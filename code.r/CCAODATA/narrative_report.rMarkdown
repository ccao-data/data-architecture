---
title: "commercial_avm_narrative_report"
author: "Mike"
date: "11/4/2020"
output: html_document
---
<!-- Import all library -->

```{r, echo=FALSE,  warning=FALSE,  comment=FALSE, message= FALSE}
library(dplyr)
library(kableExtra)
```

<!-- Prep for all the data -->


```{r echo = FALSE, warning=FALSE,  comment=FALSE}
defaultW <- getOption("warn") 
options(warn = -1) 

format_data <- function(v, percent = FALSE, dollar = FALSE){
  
  if (percent == FALSE & dollar == FALSE){  
    
    paste0(v[1] , " - ",  v[2])
    
  } else {
    
    if (percent == TRUE & dollar == FALSE) {
      paste0(v[1]*100, "%" , " - ",  v[2]*100, "%")
      }
    else if (percent == FALSE & dollar == TRUE) {
      paste0("$", v[1] , " - ", "$", v[2]*100)
    } else {
      "can not be formed"
    }
    }
    
}


load(file = "reporting_data.rda")


## TOTAL NUMBER OF PROPERTIES --
total_property_number <- length(unique(gpi$key_pin))+ length(unique(modeling_data$buildingid))


# UNITS PER PROPERTIES (RANGE) -- 

unit_building <- modeling_data %>% 
  group_by(buildingid) %>%
  summarize(sum(units), .groups = 'drop') %>% 
  rename("Property Identifier" = "buildingid"  )  %>% ungroup()

unit_Pin <- gpi %>%  
  group_by(key_pin) %>%
  summarize(sum(units), .groups = 'drop')  %>%  
  rename("Property Identifier" = "key_pin"  )  %>% ungroup()

unit_per_building_calculation <- rbind(unit_building, unit_Pin)
unit_per_building <- format_data(c(quantile(unit_per_building_calculation$`sum(units)`, c(0.25)),
                                   quantile(unit_per_building_calculation$`sum(units)`, c(0.75) )))

# SQUARE FEET PER UNIT(RANGE) --

gpi_sq_feet <- gpi %>% 
  group_by(key_pin) %>%
  summarize(sum(mean_square_feet/units), .groups = 'drop') %>%
  rename("Property Identifier" = "key_pin", "sq_feet" ="sum(mean_square_feet/units)"  )  

modeling_sq_feet <- modeling_data %>%
  group_by(buildingid) %>%
  summarize(sum(square_feet/units), .groups = 'drop') %>%
  rename("Property Identifier" = "buildingid", "sq_feet" ="sum(square_feet/units)"  )  

square_feet_per_unit_calculation <- rbind(modeling_sq_feet, gpi_sq_feet)

square_feet_per_unit <- format_data(round(c(quantile(square_feet_per_unit_calculation$sq_feet, c(0.25)),
                         quantile(square_feet_per_unit_calculation$sq_feet, c(0.75) )), 2) )

# MONTHLY RENT PER UNITS (RANGE)
monthly_rent_gpi <- gpi %>%
  group_by(key_pin) %>%
  summarize(sum(mean_monthly_rent/units), .groups = 'drop') %>%
  # summarize(sum(mean_predicted_market_rent/units)) %>%
  rename("Property Identifier" = "key_pin" , 'monthly_rent' = 'sum(mean_monthly_rent/units)' ) 

monthly_rent_modeling <- modeling_data %>%
  group_by(buildingid) %>%
  summarize(sum(monthly_rent/units) , .groups = 'drop') %>%
  rename("Property Identifier" = "buildingid" , 'monthly_rent' = 'sum(monthly_rent/units)' )   


monthly_rent_per_unit_calculation <- rbind(monthly_rent_gpi, monthly_rent_modeling)

monthly_rent_per_unit <- format_data(round(c(quantile(monthly_rent_per_unit_calculation$monthly_rent, c(0.25)),
                    quantile(monthly_rent_per_unit_calculation$monthly_rent, c(0.75) )), 2) , percent = FALSE, dollar=TRUE )

# VACANCY RATE (RANGE)  --- Validate Vacancy rate need to be % and range from 0 -1 ?
vacancy_rate_gpi <- gpi %>% 
  filter(vacancy_rate >= 0) %>%
  group_by(key_pin) %>% 
  summarize(round(sum(vacancy_rate), 2), .groups = 'drop') %>%
  rename("Property Identifier" = "key_pin" , 'vacancy_rate' = 'round(sum(vacancy_rate), 2)' ) %>%
  filter(vacancy_rate >0 & vacancy_rate <= 1) 


vacancy_rate_modeling <- modeling_data %>%  
  group_by(buildingid) %>%
  summarise(round(sum(months_vacant/12), 2), .groups = 'drop') %>%
  rename("Property Identifier" = "buildingid" , 'vacancy_rate' = 'round(sum(months_vacant/12), 2)' ) %>%
  filter(vacancy_rate >0 & vacancy_rate <= 1)  


vacancy_rate_calculated <- rbind(vacancy_rate_gpi, vacancy_rate_modeling)
vacancy_rate <- format_data(round(c(quantile(vacancy_rate_calculated$vacancy_rate, c(0.25)),
                    quantile(vacancy_rate_calculated$vacancy_rate, c(0.75) )), 2) , percent = TRUE )

# EXPENSE RATIO (RANGE)
expense_ratio <- format_data(round(c(quantile(gpi$expense_ratio, c(0.25)),
                    quantile(gpi$expense_ratio, c(0.75) )), 2) , percent = TRUE )

# CAP RATE(RANGE)
cap_rate <- format_data(round(c(quantile(gpi$mean_cap_rate, c(0.25), na.rm= T),
                    quantile(gpi$mean_cap_rate, c(0.75), na.rm=T )), 2) , percent = TRUE )

# ESTIMATED VALUES/UNIT (RANGE) ???
estimated_val_unit_gpi <- gpi %>%
  filter(.$gpi > 0 & !is.na(.$gpi)) %>%
  group_by(key_pin) %>%
  summarise(round(sum( (.$gpi * (1-vacancy_rate) * (1-predicted_non_payment_rate) * (1-expense_ratio) * (1/mean_cap_rate)) /units), 2), .groups = 'drop') %>%
  rename("Property Identifier" = "key_pin" , 'estimated_val_unit' = 'round(...)' )

# How to use modeling_data to calculate estimated value?

Estimated_val_per_unit_calculation <- rbind(estimated_val_unit_gpi)

Estimated_val_per_unit <- format_data(round(c(quantile(Estimated_val_per_unit_calculation$estimated_val_unit, c(0.25) , na.rm= T),
                    quantile(Estimated_val_per_unit_calculation$estimated_val_unit, c(0.75) , na.rm= T )), 2) , dollar = TRUE )

# TABLE 3 --- create a data frame with the reported value

tbl3 <- data.frame( total_property_number,
                    square_feet_per_unit,
                    unit_per_building,
                    monthly_rent_per_unit,
                    vacancy_rate,
                    expense_ratio,
                    cap_rate,
                    Estimated_val_per_unit
)
names(tbl3) <- c(" ", "  ", "   ")

```

## Table3

```{r kable, echo = FALSE, warning=FALSE , comment=FALSE}

kable(tbl3, echo= FALSE, row.names = FALSE, col.names = NULL, booktabs = T) %>%
  kable_styling(
  full_width = TRUE,
  font_size = 14 
  )  %>% 
  add_header_above(c("# of Propertues" = 1, "Sqr feet Per Unit (Range)" = 1, "Units per building (Range)" = 1,  "Monthly Rent/unit (Range)" = 1, 
                     "Vacancy Rate (Range)" = 1, "Expense Ratio (Range)" = 1, "Cap Rate (Range)" =  1, "Estimated Value/unit (Range)" = 1  ), 
                   color = 'white', background = 'blue', align = 'center', bold = T, border_right = T) %>%
  add_header_above(c("Initial 2020 Valuation Data" = 7, "CCAO DS Depatment Fair Market Value" = 1 ), color = c('white', 'white'), background = c('black', 'blue'), align = 'center', bold = T, border_right = T) %>%
  row_spec(1, background = 'lightgrey', color = 'black', align = 'center', bold = T, font_size = 'x-large') %>%
  column_spec(1:8, border_right  = TRUE) %>%
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = T)
```


