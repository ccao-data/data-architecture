models:
  - name: proximity.cnt_pin_num_bus_stop
    description: '{{ doc("table_cnt_pin_num_bus_stop") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_cnt_pin_num_bus_stop_matches_spatial_transit_stop
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (
              SELECT MIN(year)
              FROM {{ source('spatial', 'transit_stop') }}
              WHERE route_type = 3
            )
          )
        meta:
          description: dist_pin_to_bike_trail should match spatial_parcel
    - unique_combination_of_columns:
          name: proximity_cnt_pin_num_bus_stop_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: cnt_pin_num_bus_stop should be unique by pin10 and year

  - name: proximity.cnt_pin_num_foreclosure
    description: '{{ doc("table_cnt_pin_num_foreclosure") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_cnt_pin_num_foreclosure_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.cnt_pin_num_foreclosure') }})
          )
        meta:
          description: cnt_pin_num_foreclosure should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_cnt_pin_num_foreclosure_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: cnt_pin_num_foreclosure should be unique by pin10 and year

  - name: proximity.cnt_pin_num_school
    description: '{{ doc("table_cnt_pin_num_school") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_cnt_pin_num_school_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.cnt_pin_num_school') }})
          )
        meta:
          description: dist_pin_to_bike_trail should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_cnt_pin_num_school_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: cnt_pin_num_school should be unique by pin10 and year

  - name: proximity.crosswalk_year_fill
    description: '{{ doc("table_crosswalk_year_fill") }}'
    tags:
      - load_manual
    data_tests:
    - unique_combination_of_columns:
        name: proximity_crosswalk_year_fill_unique_by_year
        combination_of_columns:
          - year
        meta:
          description: crosswalk_year_fill should be unique by year

  - name: proximity.dist_pin_to_airport
    description: '{{ doc("table_dist_pin_to_airport") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_dist_pin_to_airport_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_airport') }})
          )
        meta:
          description: dist_pin_to_bike_trail should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_airport_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_airport should be unique by pin10 and year

  - name: proximity.dist_pin_to_bike_trail
    description: '{{ doc("table_dist_pin_to_bike_trail") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_dist_pin_to_bike_trail_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_bike_trail') }})
          )
        meta:
          description: dist_pin_to_bike_trail should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_bike_trail_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_bike_trail should be unique by pin10 and year

  - name: proximity.dist_pin_to_cemetery
    description: '{{ doc("table_dist_pin_to_cemetery") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_dist_pin_to_cemetery_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_cemetery') }})
          )
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_cemetery_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_cemetery should be unique by pin10 and year

  - name: proximity.dist_pin_to_cta_route
    description: '{{ doc("table_dist_pin_to_cta_route") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: dist_pin_to_cta_route_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_cta_route') }})
          )
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_cta_route_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_cta_route should be unique by pin10 and year

  - name: proximity.dist_pin_to_cta_stop
    description: '{{ doc("table_dist_pin_to_cta_stop") }}'
    data_tests:
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_cta_stop_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_cta_stop should be unique by pin10 and year

  - name: proximity.dist_pin_to_golf_course
    description: '{{ doc("table_dist_pin_to_golf_course") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: dist_pin_to_golf_course_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_golf_course') }})
          )
        meta:
          description: dist_pin_to_golf_course should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_golf_course_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_golf_course should be unique by pin10 and year

  - name: proximity.dist_pin_to_grocery_store
    description: '{{ doc("table_dist_pin_to_grocery_store") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: dist_pin_to_grocery_store_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_grocery_store') }})
          )
        meta:
          description: dist_pin_to_grocery_store should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_grocery_store_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_grocery_store should be unique by pin10 and year

  - name: proximity.dist_pin_to_hospital
    description: '{{ doc("table_dist_pin_to_hospital") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: dist_pin_to_hospital_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_hospital') }})
          )
        meta:
          description: dist_pin_to_hospital should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_hospital_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_hospital should be unique by pin10 and year

  - name: proximity.dist_pin_to_lake_michigan
    description: '{{ doc("table_dist_pin_to_lake_michigan") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: dist_pin_to_lake_michigan_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_lake_michigan') }})
          )
        meta:
          description: dist_pin_to_lake_michigan should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_lake_michigan_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_lake_michigan should be unique by pin10 and year

  - name: proximity.dist_pin_to_major_road
    description: '{{ doc("table_dist_pin_to_major_road") }}'
    tags:
      - load_manual
    data_tests:
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_major_road_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_major_road should be unique by pin10 and year

  - name: proximity.dist_pin_to_metra_route
    description: '{{ doc("table_dist_pin_to_metra_route") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_dist_pin_to_metra_route_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_metra_route') }})
          )
        meta:
          description: dist_pin_to_metra_route should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_metra_route_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_metra_route should be unique by pin10 and year

  - name: proximity.dist_pin_to_metra_stop
    description: '{{ doc("table_dist_pin_to_metra_stop") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_dist_pin_to_metra_stop_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_metra_stop') }})
          )
        meta:
          description: dist_pin_to_metra_stop should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_metra_stop_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_metra_stop should be unique by pin10 and year

  - name: proximity.dist_pin_to_new_construction
    description: '{{ doc("table_dist_pin_to_new_construction") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: dist_pin_to_new_construction_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }} AS parcel
            INNER JOIN {{ ref('default.vw_card_res_char') }} AS vw_card_res_char
              ON parcel.pin10 = vw_card_res_char.pin10
              and parcel.year = vw_card_res_char.year
          )
        meta:
          description: dist_pin_to_new_construction should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_new_construction_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_new_construction should be unique by pin10 and year

  - name: proximity.dist_pin_to_park
    description: '{{ doc("table_dist_pin_to_park") }}'
    tags:
      - load_manual
    data_tests:
    - row_count:
        name: proximity_dist_pin_to_park_matches_spatial_parcel
        above: >
          (
            SELECT COUNT(*)
            FROM {{ source('spatial', 'parcel') }}
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_park') }})
          )
        meta:
          description: dist_pin_to_park should match spatial_parcel
    - unique_combination_of_columns:
        name: proximity_dist_pin_to_park_unique_by_pin10_and_year
        combination_of_columns:
          - pin10
          - year
        meta:
          description: dist_pin_to_park should be unique by pin10 and year

  - name: proximity.dist_pin_to_pin
    description: '{{ doc("view_dist_pin_to_pin") }}'
    tags:
      - load_manual
    data_tests:
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_pin_unique_by_10_digit_pin_and_year
          combination_of_columns:
            - pin10
            - year

  - name: proximity.dist_pin_to_pin_01
    description: '{{ doc("table_dist_pin_to_pin_intermediate") }}'
    tags:
      - load_manual
    data_tests:
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_pin_01_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_pin_01 should be unique by pin10 and year

  - name: proximity.dist_pin_to_pin_02
    description: '{{ doc("table_dist_pin_to_pin_intermediate") }}'
    tags:
      - load_manual
    data_tests:
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_pin_02_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_pin_02 should be unique by pin10 and year

  - name: proximity.dist_pin_to_pin_03
    description: '{{ doc("table_dist_pin_to_pin_intermediate") }}'
    tags:
      - load_manual
    data_tests:
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_pin_03_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_pin_03 should be unique by pin10 and year

  - name: proximity.dist_pin_to_railroad
    description: '{{ doc("table_dist_pin_to_railroad") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_railroad_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_railroad') }})
            )
          meta:
            description: dist_pin_to_railroad should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_railroad_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_railroad should be unique by pin10 and year

  - name: proximity.dist_pin_to_road_arterial
    description: '{{ doc("table_dist_pin_to_road_arterial") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_road_arterial_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_road_arterial') }})
            )
          meta:
            description: dist_pin_to_road_arterial should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_road_arterial_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_road_arterial should be unique by pin10 and year

  - name: proximity.dist_pin_to_road_collector
    description: '{{ doc("table_dist_pin_to_road_collector") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_road_collector_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_road_collector') }})
            )
          meta:
            description: dist_pin_to_road_collector should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_road_collector_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_road_collector should be unique by pin10 and year

  - name: proximity.dist_pin_to_road_highway
    description: '{{ doc("table_dist_pin_to_road_highway") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_road_highway_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_road_highway') }})
            )
          meta:
            description: dist_pin_to_road_highway should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_road_highway_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_road_highway should be unique by pin10 and year

  - name: proximity.dist_pin_to_secondary_road
    description: '{{ doc("table_dist_pin_to_secondary_road") }}'
    tags:
      - load_manual
    data_tests:
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_secondary_road_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_secondary_road should be unique by pin10 and year

  - name: proximity.dist_pin_to_stadium
    description: '{{ doc("table_dist_pin_to_stadium") }}'
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_stadium_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_stadium') }})
            )
          meta:
            description: dist_pin_to_stadium should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_stadium_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_stadium should be unique by pin10 and year

  - name: proximity.dist_pin_to_university
    description: '{{ doc("table_dist_pin_to_university") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_university_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_university') }})
            )
          meta:
            description: dist_pin_to_university should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_university_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_university should be unique by pin10 and year

  - name: proximity.dist_pin_to_vacant_land
    description: '{{ doc("table_dist_pin_to_vacant_land") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_vacant_land_matches_spatial_parcel
          above: >
            WITH filtered_parcel AS (
                SELECT parcel.*
                FROM {{ source('spatial', 'parcel') }} AS parcel
                INNER JOIN {{ source('iasworld', 'pardat') }} AS pardat
                    ON parcel.pin10 = SUBSTR(pardat.parid, 1, 10)
                    AND parcel.year = pardat.taxyr
                    AND pardat.cur = 'Y'
                    AND pardat.deactivat IS NULL
                    AND pardat.class = '100'
                    AND ST_AREA(ST_GEOMFROMBINARY(geometry_3435)) >= 1000
            )
            SELECT COUNT(*)
            FROM filtered_parcel
            WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_vacant_land') }})
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_vacant_land_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_vacant_land should be unique by pin10 and year

  - name: proximity.dist_pin_to_water
    description: '{{ doc("table_dist_pin_to_water") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_dist_pin_to_water_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.dist_pin_to_water') }})
            )
          meta:
            description: dist_pin_to_water should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_dist_pin_to_water_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: dist_pin_to_water should be unique by pin10 and year

  - name: proximity.vw_pin10_proximity
    description: '{{ doc("view_vw_pin10_proximity") }}'
    tags:
      - load_manual
    data_tests:
      - row_count:
          name: proximity_vw_pin10_proximity_matches_spatial_parcel
          above: >
            (
              SELECT COUNT(*)
              FROM {{ source('spatial', 'parcel') }}
              WHERE year >= (SELECT MIN(year) FROM {{ ref('proximity.vw_pin10_proximity') }})
            )
          meta:
            description: vw_pin10_proximity should match spatial_parcel
      - unique_combination_of_columns:
          name: proximity_vw_pin10_proximity_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: vw_pin10_proximity should be unique by pin10 and year
    columns: &vw_proximity_columns
      - name: airport_dnl_total
        description: '{{ doc("column_airport_dnl_total") }}'
      - name: avg_school_rating_in_half_mile
        description: '{{ doc("column_avg_school_rating_in_half_mile") }}'
      - name: lake_michigan_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: lake_michigan_dist_ft
        description: '{{ doc("column_lake_michigan_dist_ft") }}'
      - name: nearest_bike_trail_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_bike_trail_dist_ft
        description: '{{ doc("column_nearest_bike_trail_dist_ft") }}'
      - name: nearest_bike_trail_id
        description: '{{ doc("column_nearest_bike_trail_id") }}'
      - name: nearest_bike_trail_name
        description: '{{ doc("column_nearest_bike_trail_name") }}'
      - name: nearest_cemetery_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_cemetery_dist_ft
        description: '{{ doc("column_nearest_cemetery_dist_ft") }}'
      - name: nearest_cemetery_gnis_code
        description: '{{ doc("column_nearest_cemetery_gnis_code") }}'
      - name: nearest_cemetery_name
        description: '{{ doc("column_nearest_cemetery_name") }}'
      - name: nearest_cta_route_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_cta_route_dist_ft
        description: '{{ doc("column_nearest_cta_route_dist_ft") }}'
      - name: nearest_cta_route_id
        description: '{{ doc("column_nearest_cta_route_id") }}'
      - name: nearest_cta_route_name
        description: '{{ doc("column_nearest_cta_route_name") }}'
      - name: nearest_cta_stop_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_cta_stop_dist_ft
        description: '{{ doc("column_nearest_cta_stop_dist_ft") }}'
      - name: nearest_cta_stop_id
        description: '{{ doc("column_nearest_cta_stop_id") }}'
      - name: nearest_cta_stop_name
        description: '{{ doc("column_nearest_cta_stop_name") }}'
      - name: nearest_golf_course_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_golf_course_dist_ft
        description: '{{ doc("column_nearest_golf_course_dist_ft") }}'
      - name: nearest_golf_course_id
        description: '{{ doc("column_nearest_golf_course_id") }}'
      - name: nearest_grocery_store_dist_ft
        description: '{{ doc("column_nearest_grocery_store_dist_ft") }}'
      - name: nearest_grocery_store_name
        description: '{{ doc("column_nearest_grocery_store_name") }}'
      - name: nearest_grocery_store_name
        description: '{{ doc("column_nearest_grocery_store_name") }}'
      - name: nearest_hospital_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_hospital_dist_ft
        description: '{{ doc("column_nearest_hospital_dist_ft") }}'
      - name: nearest_hospital_gnis_code
        description: '{{ doc("column_nearest_hospital_gnis_code") }}'
      - name: nearest_hospital_name
        description: '{{ doc("column_nearest_hospital_name") }}'
      - name: nearest_major_road_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_major_road_dist_ft
        description: '{{ doc("column_nearest_major_road_dist_ft") }}'
      - name: nearest_major_road_name
        description: '{{ doc("column_nearest_major_road_name") }}'
      - name: nearest_major_road_osm_id
        description: '{{ doc("column_nearest_major_road_osm_id") }}'
      - name: nearest_metra_route_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_metra_route_dist_ft
        description: '{{ doc("column_nearest_metra_route_dist_ft") }}'
      - name: nearest_metra_route_id
        description: '{{ doc("column_nearest_metra_route_id") }}'
      - name: nearest_metra_route_name
        description: '{{ doc("column_nearest_metra_route_name") }}'
      - name: nearest_metra_stop_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_metra_stop_dist_ft
        description: '{{ doc("column_nearest_metra_stop_dist_ft") }}'
      - name: nearest_metra_stop_id
        description: '{{ doc("column_nearest_metra_stop_id") }}'
      - name: nearest_metra_stop_name
        description: '{{ doc("column_nearest_metra_stop_name") }}'
      - name: nearest_neighbor_1_dist_ft
        description: '{{ doc("column_nearest_neighbor_dist_ft") }}'
      - name: nearest_neighbor_1_pin10
        description: '{{ doc("column_nearest_neighbor_pin10") }}'
      - name: nearest_neighbor_2_dist_ft
        description: '{{ doc("column_nearest_neighbor_dist_ft") }}'
      - name: nearest_neighbor_2_pin10
        description: '{{ doc("column_nearest_neighbor_pin10") }}'
      - name: nearest_neighbor_3_dist_ft
        description: '{{ doc("column_nearest_neighbor_dist_ft") }}'
      - name: nearest_neighbor_3_pin10
        description: '{{ doc("column_nearest_neighbor_pin10") }}'
      - name: nearest_new_construction_char_yrblt
        description: '{{ doc("column_nearest_new_construction_char_yrblt") }}'
      - name: nearest_new_construction_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_new_construction_dist_ft
        description: '{{ doc("column_nearest_new_construction_dist_ft") }}'
      - name: nearest_new_construction_pin10
        description: '{{ doc("column_nearest_new_construction_pin10") }}'
      - name: nearest_park_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_park_dist_ft
        description: '{{ doc("column_nearest_park_dist_ft") }}'
      - name: nearest_park_name
        description: '{{ doc("column_nearest_park_name") }}'
      - name: nearest_park_osm_id
        description: '{{ doc("column_nearest_park_osm_id") }}'
      - name: nearest_railroad_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_railroad_dist_ft
        description: '{{ doc("column_nearest_railroad_dist_ft") }}'
      - name: nearest_railroad_id
        description: '{{ doc("column_nearest_railroad_id") }}'
      - name: nearest_railroad_name
        description: '{{ doc("column_nearest_railroad_name") }}'
      - name: nearest_secondary_road_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_secondary_road_dist_ft
        description: '{{ doc("column_nearest_secondary_road_dist_ft") }}'
      - name: nearest_secondary_road_name
        description: '{{ doc("column_nearest_secondary_road_name") }}'
      - name: nearest_secondary_road_osm_id
        description: '{{ doc("column_nearest_secondary_road_osm_id") }}'
      - name: nearest_stadium_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_stadium_dist_ft
        description: '{{ doc("column_nearest_stadium_dist_ft") }}'
      - name: nearest_stadium_name
        description: '{{ doc("column_nearest_stadium_name") }}'
      - name: nearest_university_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_university_dist_ft
        description: '{{ doc("column_nearest_university_dist_ft") }}'
      - name: nearest_university_gnis_code
        description: '{{ doc("column_nearest_university_gnis_code") }}'
      - name: nearest_university_name
        description: '{{ doc("column_nearest_university_name") }}'
      - name: nearest_vacant_land_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_vacant_land_dist_ft
        description: '{{ doc("column_nearest_vacant_land_dist_ft") }}'
      - name: nearest_vacant_land_pin10
        description: '{{ doc("column_nearest_vacant_land_pin10") }}'
      - name: nearest_water_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: nearest_water_dist_ft
        description: '{{ doc("column_nearest_water_dist_ft") }}'
      - name: nearest_water_id
        description: '{{ doc("column_nearest_water_id") }}'
      - name: nearest_water_name
        description: '{{ doc("column_nearest_water_name") }}'
      - name: num_bus_stop_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: num_bus_stop_in_half_mile
        description: '{{ doc("column_num_bus_stop_in_half_mile") }}'
      - name: num_foreclosure_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: num_foreclosure_in_half_mile_past_5_years
        description: '{{ doc("column_num_foreclosure_in_half_mile_past_5_years") }}'
      - name: num_foreclosure_per_1000_pin_past_5_years
        description: '{{ doc("column_num_foreclosure_per_1000_pin_past_5_years") }}'
      - name: num_pin_in_half_mile
        description: '{{ doc("column_num_pin_in_half_mile") }}'
      - name: num_school_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: num_school_in_half_mile
        description: '{{ doc("column_num_school_in_half_mile") }}'
      - name: num_school_rating_data_year
        description: '{{ doc("shared_column_data_year") }}'
      - name: num_school_with_rating_in_half_mile
        description: '{{ doc("column_num_school_with_rating_in_half_mile") }}'
      - name: pin10
        description: '{{ doc("shared_column_pin10") }}'
      - name: year
        description: '{{ doc("shared_column_year") }}'

  - name: proximity.vw_pin10_proximity_fill
    description: '{{ doc("view_vw_pin10_proximity_fill") }}'
    tags:
      - load_manual
    data_tests:
      - unique_combination_of_columns:
          name: proximity_vw_pin10_proximity_fill_unique_by_pin10_and_year
          combination_of_columns:
            - pin10
            - year
          meta:
            description: vw_pin10_proximity_fill should be unique by pin10 and year
    columns: *vw_proximity_columns

unit_tests:
  - name: proximity_crosswalk_year_fill_should_create_proper_fill_and_data_years
    description: view should define correct fill and data years
    model: proximity.crosswalk_year_fill
    given:
      - input: source("spatial", "parcel")
        rows: &proximity-crosswalk-year-fill-unit-test-pin-and-year
          # Two PINs, one for each year from 2019-2021
          - {pin10: "0123456789", year: "2019"}
          - {pin10: "1234567890", year: "2019"}
          - {pin10: "0123456789", year: "2020"}
          - {pin10: "1234567890", year: "2020"}
          - {pin10: "0123456789", year: "2021"}
          - {pin10: "1234567890", year: "2021"}
      # Test bus stop table as an example of a table with only one variable
      - input: ref("proximity.cnt_pin_num_bus_stop")
        rows:
          # Make sure that the data start in 2020, one year after the first
          # parcel year (2019), so that we can test that the year will still
          # get a representation in the output using the earliest year of data
          - {pin10: "0123456789", year: "2020", num_bus_stop_data_year: "2020"}
          # Add missing data for 2020 to test that we properly remove nulls
          # when pulling the full set of years
          - {pin10: "1234567890", year: "2020", num_bus_stop_data_year: null}
          # Add a row for 2021 with data that comes from 2020 to test that
          # the output will have a fill_year of 2021 in spite of the earlier
          # data year
          - {pin10: "0123456789", year: "2021", num_bus_stop_data_year: "2020"}
          - {pin10: "1234567890", year: "2021", num_bus_stop_data_year: null}
      # Test school table as an example of a table with multiple variables.
      # The different types of rows are the same as we configured for the
      # single-variable case above, we just need multiple columns in each case
      # to account for the multiple variables
      - input: ref("proximity.cnt_pin_num_school")
        rows:
          - pin10: "0123456789"
            year: "2019"
            num_school_data_year: null
            num_school_rating_data_year: null
          - pin10: "0123456789"
            year: "2020"
            num_school_data_year: "2020"
            num_school_rating_data_year: null
          - pin10: "0123456789"
            year: "2020"
            num_school_data_year: null
            num_school_rating_data_year: null
          - pin10: "0123456789"
            year: "2021"
            num_school_data_year: "2020"
            num_school_rating_data_year: "2021"
          - pin10: "0123456789"
            year: "2021"
            num_school_data_year: null
            num_school_rating_data_year: null
      # All of the input tables from here on down are just boilerplate to get
      # the joins to work in the model. The values for these input tables don't
      # really matter because we don't need any of the data in the tables
      - input: ref("proximity.cnt_pin_num_foreclosure")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_airport")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_bike_trail")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_cemetery")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_cta_route")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_cta_stop")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_golf_course")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_grocery_store")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_hospital")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_lake_michigan")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_major_road")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_metra_route")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_metra_stop")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_new_construction")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_park")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_railroad")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_road_arterial")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_road_collector")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_road_highway")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_secondary_road")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_stadium")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_university")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_vacant_land")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_water")
        rows: *proximity-crosswalk-year-fill-unit-test-pin-and-year
    expect:
      rows:
        - year: "2019"
          num_bus_stop_fill_year: "2020"
          num_bus_stop_data_year: "2020"
          num_school_fill_year: "2020"
          num_school_data_year: "2020"
          num_school_rating_fill_year: "2021"
          num_school_rating_data_year: "2021"
        - year: "2020"
          num_bus_stop_fill_year: "2020"
          num_bus_stop_data_year: "2020"
          num_school_fill_year: "2020"
          num_school_data_year: "2020"
          num_school_rating_fill_year: "2021"
          num_school_rating_data_year: "2021"
        - year: "2021"
          num_bus_stop_fill_year: "2021"
          num_bus_stop_data_year: "2020"
          num_school_fill_year: "2021"
          num_school_data_year: "2020"
          num_school_rating_fill_year: "2021"
          num_school_rating_data_year: "2021"

  - name: proximity_vw_pin10_proximity_fill_should_fill_missing_years
    description: view should fill missing years of data with nearest year
    model: proximity.vw_pin10_proximity_fill
    given:
      - input: source("spatial", "parcel")
        rows: &proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
          - {pin10: "0123456789", year: "2015"}
      - input: ref("proximity.crosswalk_year_fill")
        rows:
          - year: "2015"
            num_bus_stop_fill_year: "2016"
            num_bus_stop_data_year: "2017"
      # It doesn't matter which table we use here, we just need a fixture for
      # one of the tables that we merge together in the fill view
      - input: ref("proximity.cnt_pin_num_bus_stop")
        rows:
          - pin10: "0123456789"
            year: "2016"
            num_bus_stop_data_year: "2017"
            num_bus_stop_in_half_mile: 5
      # All of the input tables from here on down are just boilerplate to get
      # the joins to work in the model. The values for these input tables don't
      # really matter because we don't need any of the data in the tables
      - input: ref("proximity.cnt_pin_num_foreclosure")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.cnt_pin_num_school")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_airport")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_bike_trail")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_cemetery")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_cta_route")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_cta_stop")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_golf_course")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_grocery_store")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_hospital")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_lake_michigan")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_major_road")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_metra_route")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_metra_stop")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_new_construction")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_park")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_railroad")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_road_arterial")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_road_collector")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_road_highway")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_secondary_road")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_stadium")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_university")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_vacant_land")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_water")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
      - input: ref("proximity.dist_pin_to_pin")
        rows: *proximity-vw-pin10-proximity-fill-unit-test-pin-and-year
    expect:
      rows:
        - {pin10: "0123456789", year: "2015", num_bus_stop_in_half_mile: 5}
