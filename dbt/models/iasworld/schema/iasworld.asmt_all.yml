sources:
  - name: iasworld
    loaded_at_field: date_parse(wen, '%Y-%m-%d %H:%i:%s.0')
    tags:
      - load_auto
      - test_qc_iasworld

    tables:
      - name: asmt_all
        description: '{{ doc("table_asmt_all") }}'
        freshness:
          filter: taxyr >= date_format(current_date - interval '1' year, '%Y')
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}

        columns:
          - name: class
            description: '{{ doc("shared_column_class") }}'
            tests:
              - relationships:
                  name: iasworld_asmt_all_class_in_ccao_class_dict
                  to: source('ccao', 'class_dict')
                  field: class_code
                  config:
                    where: |
                      taxyr >= '2022'
                      AND class NOT IN ('EX', 'RR', '999')
                      AND NOT REGEXP_LIKE(class, '[0-9]{3}[A|B]')
                      AND rolltype != 'RR'
                      AND deactivat IS NULL
                      AND valclass IS NULL
          - name: cur
            description: '{{ doc("column_cur") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_cur_in_accepted_values
                  values: ['Y', 'D', 'N']
          - name: deactivat
            description: '{{ doc("column_deactivat") }}'
          - name: distcode
            description: District code
          - name: iasw_id
            description: '{{ doc("column_iasw_id") }}'
          - name: jur
            description: '{{ doc("column_jur") }}'
          - name: luc
            description: '{{ doc("column_luc") }}'
          - name: ovrclass
            description: Override class
          - name: ovrcodtax
            description: Override code for taxes
          - name: ovrvaltax
            description: Override value for taxes
          - name: parid
            description: '{{ doc("shared_column_pin") }}'
            tests:
              - not_null:
                  name: iasworld_asmt_all_parid_not_null
              - relationships:
                  name: iasworld_asmt_all_parid_in_pardat_parid
                  to: source('iasworld', 'pardat')
                  field: parid
          - name: procdate
            description: '{{ doc("column_procdate") }}'
          - name: procname
            description: '{{ doc("column_procname") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_procname_in_accepted_values
                  values: ['CCAOVALUE', 'CCAOFINAL', 'BORVALUE', 'CONVERT']
          - name: reascd
            description: Reason code for change in assessed value
          - name: rolltype
            description: '{{ doc("column_rolltype") }}'
          - name: seq
            description: '{{ doc("shared_column_seq") }}'
            tests:
              - dbt_utils.sequential_values:
                  name: iasworld_asmt_all_seq_all_sequential_exist
                  group_by_columns:
                    - parid
                    - taxyr
                    - procname
                  config:
                    where: &unique-conditions |
                      rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL 
                      AND valclass IS NULL
                    error_if: ">15300"
          - name: splitno
            description: '{{ doc("column_splitno") }}'
          - name: status
            description: '{{ doc("column_status") }}'
          - name: taxtable
            description: Flag to indicate assessment record used in tax calculation
          - name: taxyr
            description: '{{ doc("shared_column_year") }}'
            tests:
              - not_null:
                  name: iasworld_asmt_all_taxyr_not_null
          - name: tottax
            description: Total tax
          - name: trans_id
            description: '{{ doc("column_trans_id") }}'
          - name: upd_status
            description: '{{ doc("column_upd_status") }}'
          - name: val01
            # Test that all val* columns are not negative. Pulled from
            # the following Inquire queries via Will C:
            # - FP Checklist - Negative ASMT Values
            # - FP Checklist - Non-EX, RR parcels with 0 land value
            # - FP Checklist - Non-EX, RR parcels with 0 value
            tests:
              - dbt_utils.accepted_range: &test-non-negative
                  name: iasworld_asmt_all_val01_gte_0
                  min_value: 0
                  config:
                    where: &unique-conditions-and-recent |
                      taxyr >= '2023'
                      AND rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL
                      AND valclass IS NULL
                  tags:
                    - test_qc_valuations_fp
          - name: val02
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val02_gte_0
                  <<: *test-non-negative
          - name: val03
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val03_gte_0
                  <<: *test-non-negative
          - name: val04
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val04_gte_0
                  <<: *test-non-negative
          - name: val05
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val05_gte_0
                  <<: *test-non-negative
          - name: val06
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val06_gte_0
                  <<: *test-non-negative
          - name: val07
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val07_gte_0
                  <<: *test-non-negative
          - name: val08
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val08_gte_0
                  <<: *test-non-negative
          - name: val09
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val09_gte_0
                  <<: *test-non-negative
          - name: val10
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val10_gte_0
                  <<: *test-non-negative
          - name: val11
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val11_gte_0
                  <<: *test-non-negative
          - name: val12
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val12_gte_0
                  <<: *test-non-negative
          - name: val13
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val13_gte_0
                  <<: *test-non-negative
          - name: val14
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val14_gte_0
                  <<: *test-non-negative
          - name: val15
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val15_gte_0
                  <<: *test-non-negative
          - name: val16
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val16_gte_0
                  <<: *test-non-negative
          - name: val17
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val17_gte_0
                  <<: *test-non-negative
          - name: val18
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val18_gte_0
                  <<: *test-non-negative
          - name: val19
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val19_gte_0
                  <<: *test-non-negative
          - name: val20
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val20_gte_0
                  <<: *test-non-negative
          - name: val21
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val21_gte_0
                  <<: *test-non-negative
          - name: val22
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val22_gte_0
                  <<: *test-non-negative
          - name: val23
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val23_gte_0
                  <<: *test-non-negative
          - name: val24
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val24_gte_0
                  <<: *test-non-negative
          - name: val25
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val25_gte_0
                  <<: *test-non-negative
          - name: val26
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val26_gte_0
                  <<: *test-non-negative
          - name: val27
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val27_gte_0
                  <<: *test-non-negative
          - name: val28
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val28_gte_0
                  <<: *test-non-negative
          - name: val29
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val29_gte_0
                  <<: *test-non-negative
          - name: val30
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val30_gte_0
                  <<: *test-non-negative
          - name: val31
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val31_gte_0
                  <<: *test-non-negative
          - name: val32
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val32_gte_0
                  <<: *test-non-negative
          - name: val33
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val33_gte_0
                  <<: *test-non-negative
          - name: val34
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val34_gte_0
                  <<: *test-non-negative
          - name: val35
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val35_gte_0
                  <<: *test-non-negative
          - name: val36
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val36_gte_0
                  <<: *test-non-negative
          - name: val37
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val37_gte_0
                  <<: *test-non-negative
          - name: val38
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val38_gte_0
                  <<: *test-non-negative
          - name: val39
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val39_gte_0
                  <<: *test-non-negative
          - name: val40
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val40_gte_0
                  <<: *test-non-negative
          - name: val41
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val41_gte_0
                  <<: *test-non-negative
          - name: val42
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val42_gte_0
                  <<: *test-non-negative
          - name: val43
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val43_gte_0
                  <<: *test-non-negative
          - name: val44
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val44_gte_0
                  <<: *test-non-negative
          - name: val45
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val45_gte_0
                  <<: *test-non-negative
          - name: val46
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val46_gte_0
                  <<: *test-non-negative
          - name: val47
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val47_gte_0
                  <<: *test-non-negative
          - name: val48
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val48_gte_0
                  <<: *test-non-negative
          - name: val49
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val49_gte_0
                  <<: *test-non-negative
          - name: val50
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val50_gte_0
                  <<: *test-non-negative
          - name: val51
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val51_gte_0
                  <<: *test-non-negative
          - name: val52
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val52_gte_0
                  <<: *test-non-negative
          - name: val53
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val53_gte_0
                  <<: *test-non-negative
          - name: val54
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val54_gte_0
                  <<: *test-non-negative
          - name: val55
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val55_gte_0
                  <<: *test-non-negative
          - name: val56
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val56_gte_0
                  <<: *test-non-negative
          - name: val57
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val57_gte_0
                  <<: *test-non-negative
          - name: val58
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val58_gte_0
                  <<: *test-non-negative
          - name: val59
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val59_gte_0
                  <<: *test-non-negative
          - name: val60
            tests:
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_val60_gte_0
                  <<: *test-non-negative
            # Also from FP Checklist - Negative ASMT Values AND the view
            # definition used for vw_pin_value
          - name: valapr1
            tests:
              - not_null: &test-val-non-null
                  name: iasworld_asmt_all_valapr1_not_null
                  config:
                    where: *unique-conditions-and-recent
                    error_if: ">702"
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_valapr1_gte_0
                  <<: *test-non-negative
          - name: valapr2
            tests:
              - not_null:
                  name: iasworld_asmt_all_valapr2_not_null
                  <<: *test-val-non-null
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_valapr2_gte_0
                  <<: *test-non-negative
          - name: valapr3
            tests:
              - not_null:
                  name: iasworld_asmt_all_valapr3_not_null
                  <<: *test-val-non-null
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_valapr3_gte_0
                  <<: *test-non-negative
          - name: valasm1
            tests:
              - not_null:
                  name: iasworld_asmt_all_valasm1_not_null
                  <<: *test-val-non-null
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_valasm1_gte_0
                  <<: *test-non-negative
          - name: valasm2
            tests:
              - not_null:
                  name: iasworld_asmt_all_valasm2_not_null
                  <<: *test-val-non-null
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_valasm2_gte_0
                  <<: *test-non-negative
          - name: valasm3
            tests:
              - not_null:
                  name: iasworld_asmt_all_valasm3_not_null
                  <<: *test-val-non-null
              - dbt_utils.accepted_range:
                  name: iasworld_asmt_all_valasm3_gte_0
                  <<: *test-non-negative
          - name: valclass
            description: '{{ doc("column_valclass") }}'
          - name: valtax
            description: Taxes
          - name: valyear
            description: Valuation year
          - name: wen
            description: '{{ doc("shared_column_updated_at") }}'
          - name: wencalc
            description: '{{ doc("column_wencalc") }}'
          - name: who
            description: '{{ doc("shared_column_updated_by") }}'
          - name: whocalc
            description: '{{ doc("column_whocalc") }}'

        tests:
          # Note that this test is NOT actually the unique primary key of
          # this table, since there doesn't seem to BE a unique combination
          # of identifying columns
          - unique_combination_of_columns:
              name: iasworld_asmt_all_unique_by_parid_procname_and_taxyr
              combination_of_columns:
                - parid
                - procname
                - taxyr
              config:
                where: *unique-conditions
                error_if: ">15300"
          - row_values_match_after_join:
              name: iasworld_asmt_all_class_matches_pardat_class
              column: substr(model.class, 1, 3)
              external_model: source('iasworld', 'pardat')
              external_column: substr(external_model.class, 1, 3)
              join_columns:
                - parid
                - taxyr
              config:
                where: *unique-conditions
