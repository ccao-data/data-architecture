sources:
  - name: iasworld
    loaded_at_field: date_parse(loaded_at, '%Y-%m-%d %H:%i:%S.%f')
    tags:
      - load_auto
      - test_qc_iasworld

    tables:
      - name: asmt_all
        description: '{{ doc("table_asmt_all") }}'
        freshness:
          filter: taxyr >= date_format(current_date - interval '1' year, '%Y')
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}

        columns:
          - name: class
            description: '{{ doc("shared_column_class") }}'
            tests:
              - relationships:
                  name: iasworld_asmt_all_class_in_ccao_class_dict
                  to: source('ccao', 'class_dict')
                  field: class_code
                  additional_select_columns: &select-columns
                    - taxyr
                    - parid
                    - who
                    - wen
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND class NOT IN ('EX', 'RR', '999')
                      AND NOT REGEXP_LIKE(class, '[0-9]{3}[A|B]')
                      AND rolltype != 'RR'
                      AND deactivat IS NULL
                      AND valclass IS NULL
                  meta:
                    category: class_mismatch_or_issue
                    description: class code must be valid
              - res_class_matches_pardat:
                  name: iasworld_asmt_all_class_matches_pardat_class
                  additional_select_columns:
                    - {"column": "taxyr", "agg_func": "max"}
                    - {"column": "parid", "agg_func": "max"}
                    - {"column": "who", "agg_func": "max"}
                    - {"column": "wen", "agg_func": "max"}
                  config: &unique-conditions
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL
                      AND valclass IS NULL
                  meta:
                    description: at least one class should match pardat class
          - name: cur
            description: '{{ doc("column_cur") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_cur_in_accepted_values
                  values: ['Y', 'D', 'N']
          - name: deactivat
            description: '{{ doc("column_deactivat") }}'
          - name: distcode
            description: District code
          - name: iasw_id
            description: '{{ doc("column_iasw_id") }}'
          - name: jur
            description: '{{ doc("column_jur") }}'
          - name: loaded_at
            description: '{{ doc("shared_column_loaded_at") }}'
          - name: luc
            description: '{{ doc("column_luc") }}'
          - name: ovrclass
            description: Override class
          - name: ovrcodtax
            description: Override code for taxes
          - name: ovrvaltax
            description: Override value for taxes
          - name: parid
            description: '{{ doc("shared_column_pin") }}'
            tests:
              - not_null:
                  name: iasworld_asmt_all_parid_not_null
                  config: *unique-conditions
              - relationships:
                  name: iasworld_asmt_all_parid_in_pardat_parid
                  to: source('iasworld', 'pardat')
                  field: parid
                  config: *unique-conditions
          - name: procdate
            description: '{{ doc("column_procdate") }}'
          - name: procname
            description: '{{ doc("column_procname") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_procname_in_accepted_values
                  values: ['CCAOVALUE', 'CCAOFINAL', 'BORVALUE', 'CONVERT']
          - name: reascd
            description: Reason code for change in assessed value
          - name: rolltype
            description: '{{ doc("column_rolltype") }}'
            tests:
              - not_accepted_values:
                  name: iasworld_asmt_all_rolltype_not_rr
                  values: ['RR']
                  additional_select_columns: *select-columns
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND cur = 'Y'
                      AND deactivat IS NULL
                  meta:
                    description: rolltype RR should not exist
          - name: seq
            description: '{{ doc("shared_column_seq") }}'
            tests:
              - dbt_utils.sequential_values:
                  name: iasworld_asmt_all_seq_all_sequential_exist
                  group_by_columns:
                    - parid
                    - taxyr
                    - procname
                  config:
                    <<: *unique-conditions
                    error_if: ">15300"
          - name: splitno
            description: '{{ doc("column_splitno") }}'
          - name: status
            description: '{{ doc("column_status") }}'
          - name: taxtable
            description: Flag to indicate assessment record used in tax calculation
          - name: taxyr
            description: '{{ doc("shared_column_year") }}'
            tests:
              - not_null:
                  name: iasworld_asmt_all_taxyr_not_null
                  config: *unique-conditions
          - name: tottax
            description: Total tax
          - name: trans_id
            description: '{{ doc("column_trans_id") }}'
          - name: upd_status
            description: '{{ doc("column_upd_status") }}'
          - name: valapr1
            description: '{{ doc("column_valapr1") }}'
          - name: valapr2
            description: '{{ doc("column_valapr2") }}'
          - name: valapr3
            description: '{{ doc("column_valapr3") }}'
          - name: valasm1
            description: '{{ doc("column_valasm1") }}'
          - name: valasm2
            description: '{{ doc("column_valasm2") }}'
          - name: valasm3
            description: '{{ doc("column_valasm3") }}'
          - name: valclass
            description: '{{ doc("column_valclass") }}'
          - name: valtax
            description: Taxes
          - name: valyear
            description: Valuation year
          - name: wen
            description: '{{ doc("shared_column_updated_at") }}'
          - name: wencalc
            description: '{{ doc("column_wencalc") }}'
          - name: who
            description: '{{ doc("shared_column_updated_by") }}'
          - name: whocalc
            description: '{{ doc("column_whocalc") }}'
