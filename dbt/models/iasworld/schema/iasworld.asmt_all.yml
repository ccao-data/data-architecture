sources:
  - name: iasworld
    loaded_at_field: date_parse(loaded_at, '%Y-%m-%d %H:%i:%S.%f')
    tags:
      - load_auto
      - test_qc_iasworld

    tables:
      - name: asmt_all
        description: '{{ doc("table_asmt_all") }}'
        freshness:
          filter: taxyr >= date_format(current_date - interval '1' year, '%Y')
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}

        columns:
          - name: class
            description: '{{ doc("shared_column_class") }}'
            tests:
              - relationships:
                  name: iasworld_asmt_all_class_in_ccao_class_dict
                  to: source('ccao', 'class_dict')
                  field: class_code
                  additional_select_columns: &select-columns
                    - taxyr
                    - parid
                    - who
                    - wen
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND class NOT IN ('EX', 'RR', '999')
                      AND NOT REGEXP_LIKE(class, '[0-9]{3}[A|B]')
                      AND rolltype != 'RR'
                      AND deactivat IS NULL
                      AND valclass IS NULL
                  meta:
                    category: class_mismatch_or_issue
                    description: class code must be valid
              - res_class_matches_pardat:
                  name: iasworld_asmt_all_class_matches_pardat_class
                  additional_select_columns: &select-columns-aggregated
                    - column: taxyr
                      agg_func: max
                    - column: parid
                      agg_func: max
                    - column: who
                      agg_func: max
                    - column: wen
                      agg_func: max
                  config: &unique-conditions
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL
                      AND valclass IS NULL
                  meta:
                    description: at least one class should match pardat class
              - res_class_matches_pardat:
                  name: iasworld_asmt_all_class_ex_matches_pardat_class_ex
                  join_type: inner
                  additional_select_columns: *select-columns-aggregated
                  additional_pardat_filter: AND class = 'EX'
                  config: *unique-conditions
                  meta:
                    description: >
                      class should be EX if pardat class is EX
          - name: cur
            description: '{{ doc("column_cur") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_cur_in_accepted_values
                  values: ['Y', 'D', 'N']
                  additional_select_columns: *select-columns
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                  meta:
                    description: cur should be 'Y', 'D', or 'N'
          - name: deactivat
            description: '{{ doc("column_deactivat") }}'
          - name: distcode
            description: District code
          - name: iasw_id
            description: '{{ doc("column_iasw_id") }}'
          - name: jur
            description: '{{ doc("column_jur") }}'
          - name: loaded_at
            description: '{{ doc("shared_column_loaded_at") }}'
          - name: luc
            description: '{{ doc("column_luc") }}'
          - name: ovrclass
            description: Override class
          - name: ovrcodtax
            description: Override code for taxes
          - name: ovrvaltax
            description: Override value for taxes
          - name: parid
            description: '{{ doc("shared_column_pin") }}'
            tests:
              - not_null:
                  name: iasworld_asmt_all_parid_not_null
                  additional_select_columns: &select-columns-no-parid
                    - taxyr
                    - who
                    - wen
                  config: *unique-conditions
                  meta:
                    description: parid should not be null
              - relationships:
                  name: iasworld_asmt_all_parid_in_pardat_parid
                  to: source('iasworld', 'pardat')
                  field: parid
                  additional_select_columns: *select-columns-no-parid
                  config: *unique-conditions
                  meta:
                    category: parid
                    description: parid should be in pardat
          - name: procdate
            description: '{{ doc("column_procdate") }}'
          - name: procname
            description: '{{ doc("column_procname") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_procname_in_accepted_values
                  values: ['CCAOVALUE', 'CCAOFINAL', 'BORVALUE', 'CONVERT']
                  additional_select_columns: *select-columns
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND rolltype != 'RR'
                      AND deactivat IS NULL
                      AND valclass IS NULL
                  meta:
                    description: >
                      procname should be 'CCAOVALUE', 'CCAOFINAL', 'BORVALUE', or 'CONVERT'
          - name: reascd
            description: Reason code for change in assessed value
          - name: rolltype
            description: '{{ doc("column_rolltype") }}'
            tests:
              - not_accepted_values:
                  name: iasworld_asmt_all_rolltype_not_rr
                  values: ['RR']
                  additional_select_columns: *select-columns
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND cur = 'Y'
                      AND deactivat IS NULL
                  meta:
                    description: rolltype RR should not exist
          - name: seq
            description: '{{ doc("shared_column_seq") }}'
            tests:
              - sequential_values:
                  name: iasworld_asmt_all_seq_all_sequential_exist
                  group_by_columns:
                    - parid
                    - taxyr
                    - procname
                  additional_select_columns:
                    - who
                    - wen
                  config: *unique-conditions
                  meta:
                    description: seq should be sequential
          - name: splitno
            description: '{{ doc("column_splitno") }}'
          - name: status
            description: '{{ doc("column_status") }}'
          - name: taxtable
            description: Flag to indicate assessment record used in tax calculation
          - name: taxyr
            description: '{{ doc("shared_column_year") }}'
            tests:
              - not_null:
                  name: iasworld_asmt_all_taxyr_not_null
                  additional_select_columns:
                    - parid
                    - who
                    - wen
                  config: *unique-conditions
                  meta:
                    description: taxyr should not be null
          - name: tottax
            description: Total tax
          - name: tot30
            description: HIE Improvement Value
            tests:
              - accepted_range:
                  name: asmt_all_tot30_less_than_7500
                  max_value: 7500
                  meta:
                    description: tot30 should be <7500
              - row_values_match_after_join:
                  name: iasworld_asmt_all_tot30_matches_oby_ovrrcnld_divided_by_10
                  external_model: source('iasworld', 'oby')
                  external_column_name: OVRRCNLD / 10
                  additional_select_columns: 
                    - model.taxyr
                    - model.parid
                    - model.who
                    - model.wen
                  join_condition:
                    ON model.parid = external_model.parid
                    AND model.taxyr = external_model.taxyr
                    AND model.tot30 > 0
                    AND model.tot30 < 7500
                  config: *unique-conditions
                  meta:
                    category: relationships
                    description: exemption value should match
          - name: tot32
            description: Value After HIE
            tests:
                - expression_is_true:
                    name: iasword_asmt_all_32_equals_29_minus_30_minus_31
                    expression: = TOT29 - TOT30 - TOT31 OR TOT32 < 1
                    additional_select_columns:
                      - parid
          - name: trans_id
            description: '{{ doc("column_trans_id") }}'
          - name: upd_status
            description: '{{ doc("column_upd_status") }}'
          - name: valapr1
            description: '{{ doc("column_valapr1") }}'
          - name: valapr2
            description: '{{ doc("column_valapr2") }}'
          - name: valapr3
            description: '{{ doc("column_valapr3") }}'
          - name: valasm1
            description: '{{ doc("column_valasm1") }}'
            tests:
              - accepted_range: &incorrect-asmt-value-gt-0
                  name: iasworld_asmt_all_valasm1_non_ex_rr_gt_0
                  min_value: 0
                  inclusive: false
                  additional_select_columns: &select-columns-with-class
                    - taxyr
                    - parid
                    - class
                    - who
                    - wen
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL
                      AND valclass IS NULL
                      AND class NOT IN ('EX', 'RR')
                  meta:
                    table_name: asmt
                    description: >
                      valasm1 (ASMT LAND) should be >= 0 if class is not EX or RR
          - name: valasm2
            description: '{{ doc("column_valasm2") }}'
            tests:
              - accepted_values:
                  name: iasworld_asmt_all_valasm2_vact_class_has_val
                  values: [0]
                  quote: false
                  additional_select_columns: *select-columns-with-class
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL
                      AND valclass IS NULL
                      AND class IN (
                        '100', '200', '239', '240', '241', '300', '400', '500',
                        '535', '550', '637', '637A', '637B', '650', '651', '651A',
                        '651B', '700', '700A', '700B', '742', '742A', '742B',
                        '800', '800A', '800B', '850', '850A', '850B', '900',
                        '999', 'EX', 'RR'
                      )
                  meta:
                    table_name: asmt
                    description: >
                      valasm2 (ASMT BLDG) should be 0 for vacant classes
              - accepted_range:
                  name: iasworld_asmt_all_impr_class_valasm2_gt_0
                  config:
                    where: |
                      CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                      AND rolltype != 'RR'
                      AND procname IN ('CCAOVALUE', 'CCAOFINAL', 'BORVALUE')
                      AND deactivat IS NULL
                      AND valclass IS NULL
                      AND class NOT IN (
                        '100', '200', '239', '240', '241', '300', '400', '500',
                        '535', '550', '637', '637A', '637B', '650', '651', '651A',
                        '651B', '700', '700A', '700B', '742', '742A', '742B',
                        '800', '800A', '800B', '850', '850A', '850B', '900',
                        '999', 'EX', 'RR'
                      )
                  meta:
                    table_name: asmt
                    description: >
                      valasm2 (ASMT BLDG) should be > 0 for non-vacant classes
                  <<: *incorrect-asmt-value-gt-0
          - name: valasm3
            description: '{{ doc("column_valasm3") }}'
            tests:
              - accepted_range:
                  name: iasworld_asmt_all_valasm3_non_ex_rr_gt_0
                  meta:
                    table_name: asmt
                    description: >
                      valasm3 (ASMT TOTAL) should be >= 0 if class is not EX or RR
                  <<: *incorrect-asmt-value-gt-0
          - name: valclass
            description: '{{ doc("column_valclass") }}'
          - name: valtax
            description: Taxes
          - name: valyear
            description: Valuation year
          - name: wen
            description: '{{ doc("shared_column_updated_at") }}'
          - name: wencalc
            description: '{{ doc("column_wencalc") }}'
          - name: who
            description: '{{ doc("shared_column_updated_by") }}'
          - name: whocalc
            description: '{{ doc("column_whocalc") }}'
