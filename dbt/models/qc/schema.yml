models:
  - name: qc.vw_oby_class_mismatch
    description: '{{ doc("view_vw_class_mismatch") }}'
    config:
      tags:
        - test_qc_inquire
    column_names:
      - name: class
        tests:
          - not_accepted_values:
              name: qc_vw_class_mismatch_no_289s
              values: ["289"]
              additional_select_columns: &select-columns
                - taxyr
                - parid
                - township_code
                - who
                - wen
              config: &time-filter
                where: |
                  CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
              meta:
                table_name: oby
                category: class_mismatch_or_issue
                description: class should not be 289
      - name: major_class
        tests:
          - columns_match:
              name: qc_vw_class_mismatch_oby_class_eq_pardat_class
              columns: [pardat_major_class]
              additional_select_columns: *select-columns
              config: *time-filter
              meta:
                table_name: oby
                category: class_mismatch_or_issue
                description: class should match pardat by major class

  - name: qc.vw_comdat_class_mismatch
    description: '{{ doc("view_vw_class_mismatch") }}'
    config:
      tags:
        - test_qc_inquire
    columns:
      - name: class
        tests:
          - columns_match:
              name: qc_vw_class_mismatch_comdat_class_eq_pardat_class
              columns: [pardat_class]
              additional_select_columns: *select-columns
              config: *time-filter
              meta:
                table_name: comdat
                category: class_mismatch_or_issue
                description: class should match pardat class

  - name: qc.vw_incorrect_asmt_value
    description: '{{ doc("view_vw_incorrect_asmt_value") }}'
    config:
      tags:
        - test_qc_inquire
    columns:
      - name: cur_year_lav
        tests:
          # Equivalent to 0 Land Value test from FP Checklist
          - accepted_range: &incorrect-asmt-value-gt-0
              name: qc_vw_incorrect_asmt_value_cur_year_lav_non_ex_rr_gt_0
              min_value: 0
              inclusive: false
              additional_select_columns:
                - taxyr
                - parid
                - township_code
                - class
                - who
                - wen
                - cur_year_bav
                - cur_year_fav
              config:
                where: |
                  CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                  AND class NOT IN ('EX', 'RR')
              meta:
                table_name: asmt
                description: current year LAV should be >= 0 if class is not EX or RR
      - name: cur_year_bav
        tests:
          # Equivalent to Vacant Class, bldg value test from FP Checklist
          - accepted_values:
              name: qc_vw_incorrect_asmt_value_cur_year_bav_vact_class_has_val
              values: [0]
              quote: false
              additional_select_columns: &select-columns-cur-year-bav
                - taxyr
                - parid
                - township_code
                - class
                - who
                - wen
                - cur_year_lav
                - cur_year_fav
              config:
                where: |
                  CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                  AND class IN (
                    '100', '200', '239', '240', '241', '300', '400', '500',
                    '535', '550', '637', '637A', '637B', '650', '651', '651A',
                    '651B', '700', '700A', '700B', '742', '742A', '742B',
                    '800', '800A', '800B', '850', '850A', '850B', '900',
                    '999', 'EX', 'RR'
                  )
              meta:
                table_name: asmt
                description: current year BAV should be 0 for vacant classes
          # Equivalent to Improved class, no bldg value from FP Checklist
          - not_accepted_values:
              name: qc_vw_incorrect_asmt_value_cur_year_bav_impr_class_no_val
              values: [0]
              quote: false
              additional_select_columns: *select-columns-cur-year-bav
              config:
                where: |
                  CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                  AND class NOT IN (
                    '100', '200', '239', '240', '241', '300', '400', '500',
                    '535', '550', '637', '637A', '637B', '650', '651', '651A',
                    '651B', '700', '700A', '700B', '742', '742A', '742B',
                    '800', '800A', '800B', '850', '850A', '850B', '900',
                    '999', 'EX', 'RR'
                  )
              meta:
                table_name: asmt
                description: current year BAV should not be 0 for non-vacant classes
      - name: cur_year_fav
        tests:
          # Equivalent to 0 Value test from FP Checklist
          - accepted_range:
              name: qc_vw_incorrect_asmt_value_cur_year_fav_non_ex_rr_gt_0
              additional_select_columns:
                - taxyr
                - parid
                - township_code
                - class
                - who
                - wen
                - cur_year_lav
                - cur_year_bav
              meta:
                table_name: asmt
                description: current year FAV should be >=0 if class is not EX or RR
              <<: *incorrect-asmt-value-gt-0
      - name: class
        tests:
          # Equivalent to Class does not equal LUC from FP Checklist
          - expression_is_true:
              name: qc_vw_incorrect_asmt_value_class_equals_luc
              expression: '= luc'
              select_columns:
                - taxyr
                - parid
                - township_code
                - who
                - wen
                - luc
              config: *time-filter
              meta:
                table_name: asmt
                category: relationships
                description: class should be the same as luc
    tests:
      - expression_is_true:
          name: qc_vw_incorrect_asmt_value_no_yoy_inc_gt_500k
          expression: (cur_year_fmv - pri_year_fmv) <= 500000
          select_columns: &select-columns-cur-and-pri-year-fmv
            - taxyr
            - parid
            - township_code
            - class
            - who
            - wen
            - cur_year_fmv
            - pri_year_fmv
          config: *time-filter
          meta:
            table_name: asmt
            category: relationships
            description: FMV should not increase more than $500k YoY
      - expression_is_true:
          name: qc_vw_incorrect_asmt_value_no_yoy_dec_gt_1m
          expression: (cur_year_fmv - pri_year_fmv) >= -1000000
          select_columns: *select-columns-cur-and-pri-year-fmv
          config: *time-filter
          meta:
            table_name: asmt
            category: relationships
            description: FMV should not decrease more than $1m YoY

  - name: qc.vw_incorrect_val_method
    description: '{{ doc("view_vw_incorrect_val_method") }}'
    config:
      tags:
        - test_qc_inquire
    columns:
      - name: revcode
        tests:
          # Equivalent to Res parcels not set to Cost Approach from FP Checklist
          - accepted_values:
              name: qc_vw_incorrect_val_method_revcode_eq_1
              values: ['1']
              additional_select_columns:
                - taxyr
                - parid
                - class
                - township_code
                - who
                - wen
              config:
                where: |
                  CAST(taxyr AS int) BETWEEN {{ var('test_qc_year_start') }} AND {{ var('test_qc_year_end') }}
                  AND class LIKE '2%'
              meta:
                table_name: aprval
                description: revcode should be '1' for 200-class parcels


  - name: qc.vw_neg_asmt_value
    description: '{{ doc("view_vw_neg_asmt_value") }}'
    config:
      tags:
        - test_qc_inquire
    columns:
      - name: val01
        tests:
          - accepted_range: &test-non-negative
              name: qc_vw_neg_asmt_value_val01_gte_0
              min_value: 0
              additional_select_columns: &select-columns-neg-asmt-value
                - taxyr
                - parid
                - township_code
                - class
                - who
                - wen
              config: *time-filter
      - name: val02
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val02_gte_0
              <<: *test-non-negative
      - name: val03
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val03_gte_0
              <<: *test-non-negative
      - name: val04
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val04_gte_0
              <<: *test-non-negative
      - name: val05
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val05_gte_0
              <<: *test-non-negative
      - name: val06
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val06_gte_0
              <<: *test-non-negative
      - name: val07
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val07_gte_0
              <<: *test-non-negative
      - name: val08
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val08_gte_0
              meta:
                table_name: asmt
                description: val08 should not be negative
              <<: *test-non-negative
      - name: val09
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val09_gte_0
              <<: *test-non-negative
      - name: val10
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val10_gte_0
              <<: *test-non-negative
      - name: val11
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val11_gte_0
              <<: *test-non-negative
              meta:
                table_name: asmt
                description: val11 should not be negative
      - name: val12
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val12_gte_0
              <<: *test-non-negative
      - name: val13
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val13_gte_0
              meta:
                table_name: asmt
                description: val13 should not be negative
              <<: *test-non-negative
      - name: val14
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val14_gte_0
              meta:
                table_name: asmt
                description: val14 should not be negative
              <<: *test-non-negative
      - name: val15
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val15_gte_0
              <<: *test-non-negative
      - name: val16
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val16_gte_0
              meta:
                table_name: asmt
                description: val16 should not be negative
              <<: *test-non-negative
      - name: val17
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val17_gte_0
              <<: *test-non-negative
      - name: val18
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val18_gte_0
              <<: *test-non-negative
      - name: val19
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val19_gte_0
              meta:
                table_name: asmt
                description: val19 should not be negative
              <<: *test-non-negative
      - name: val20
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val20_gte_0
              meta:
                table_name: asmt
                description: val20 should not be negative
              <<: *test-non-negative
      - name: val21
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val21_gte_0
              meta:
                table_name: asmt
                description: val21 should not be negative
              <<: *test-non-negative
      - name: val22
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val22_gte_0
              <<: *test-non-negative
      - name: val23
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val23_gte_0
              <<: *test-non-negative
      - name: val24
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val24_gte_0
              <<: *test-non-negative
      - name: val25
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val25_gte_0
              <<: *test-non-negative
      - name: val26
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val26_gte_0
              <<: *test-non-negative
      - name: val27
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val27_gte_0
              <<: *test-non-negative
      - name: val28
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val28_gte_0
              <<: *test-non-negative
      - name: val29
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val29_gte_0
              <<: *test-non-negative
      - name: val30
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val30_gte_0
              <<: *test-non-negative
      - name: val31
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val31_gte_0
              <<: *test-non-negative
      - name: val32
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val32_gte_0
              <<: *test-non-negative
      - name: val33
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val33_gte_0
              <<: *test-non-negative
      - name: val34
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val34_gte_0
              <<: *test-non-negative
      - name: val35
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val35_gte_0
              <<: *test-non-negative
      - name: val36
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val36_gte_0
              <<: *test-non-negative
      - name: val37
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val37_gte_0
              <<: *test-non-negative
      - name: val38
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val38_gte_0
              <<: *test-non-negative
      - name: val39
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val39_gte_0
              <<: *test-non-negative
      - name: val40
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val40_gte_0
              <<: *test-non-negative
      - name: val41
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val41_gte_0
              <<: *test-non-negative
      - name: val42
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val42_gte_0
              <<: *test-non-negative
      - name: val43
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val43_gte_0
              <<: *test-non-negative
      - name: val44
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val44_gte_0
              <<: *test-non-negative
      - name: val45
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val45_gte_0
              <<: *test-non-negative
      - name: val46
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val46_gte_0
              <<: *test-non-negative
      - name: val47
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val47_gte_0
              <<: *test-non-negative
      - name: val48
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val48_gte_0
              <<: *test-non-negative
      - name: val49
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val49_gte_0
              <<: *test-non-negative
      - name: val50
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val50_gte_0
              <<: *test-non-negative
      - name: val51
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val51_gte_0
              <<: *test-non-negative
      - name: val52
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val52_gte_0
              <<: *test-non-negative
      - name: val53
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val53_gte_0
              <<: *test-non-negative
      - name: val54
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val54_gte_0
              <<: *test-non-negative
      - name: val55
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val55_gte_0
              <<: *test-non-negative
      - name: val56
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val56_gte_0
              <<: *test-non-negative
      - name: val57
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val57_gte_0
              <<: *test-non-negative
      - name: val58
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val58_gte_0
              <<: *test-non-negative
      - name: val59
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val59_gte_0
              <<: *test-non-negative
      - name: val60
        tests:
          - accepted_range:
              name: qc_vw_neg_asmt_value_val60_gte_0
              <<: *test-non-negative
      - name: valapr1
        tests:
          - not_null: &test-val-non-null
              name: qc_vw_neg_asmt_value_valapr1_not_null
              additional_select_columns: *select-columns-neg-asmt-value
              config:
                where: taxyr >= '2023'
              meta:
                table_name: asmt
                description: valapr1 should not be null
          - accepted_range:
              name: qc_vw_neg_asmt_value_valapr1_gte_0
              <<: *test-non-negative
      - name: valapr2
        tests:
          - not_null:
              name: qc_vw_neg_asmt_value_valapr2_not_null
              meta:
                table_name: asmt
                description: valapr2 should not be null
              <<: *test-val-non-null
          - accepted_range:
              name: qc_vw_neg_asmt_value_valapr2_gte_0
              <<: *test-non-negative
      - name: valapr3
        tests:
          - not_null:
              name: qc_vw_neg_asmt_value_valapr3_not_null
              meta:
                table_name: asmt
                description: valapr3 should not be null
              <<: *test-val-non-null
          - accepted_range:
              name: qc_vw_neg_asmt_value_valapr3_gte_0
              <<: *test-non-negative
      - name: valasm1
        tests:
          - not_null:
              name: qc_vw_neg_asmt_value_valasm1_not_null
              meta:
                table_name: asmt
                description: valasm1 should not be null
              <<: *test-val-non-null
          - accepted_range:
              name: qc_vw_neg_asmt_value_valasm1_gte_0
              <<: *test-non-negative
      - name: valasm2
        tests:
          - not_null:
              name: qc_vw_neg_asmt_value_valasm2_not_null
              meta:
                table_name: asmt
                description: valasm2 should not be null
              <<: *test-val-non-null
          - accepted_range:
              name: qc_vw_neg_asmt_value_valasm2_gte_0
              <<: *test-non-negative
      - name: valasm3
        tests:
          - not_null:
              name: qc_vw_neg_asmt_value_valasm3_not_null
              meta:
                table_name: asmt
                description: valasm3 should not be null
              <<: *test-val-non-null
          - accepted_range:
              name: qc_vw_neg_asmt_value_valasm3_gte_0
              <<: *test-non-negative

  - name: qc.vw_change_in_high_low_value_sales
    description: '{{ doc("view_vw_change_in_high_low_value_sales") }}'
    config:
      tags:
        - test_qc_sales
    tests:
      - expression_is_true:
          name: qc_vw_change_in_high_low_value_sales_ratio_high
          expression: "price_less_than_10k_growth_status = 'No significant change'"
          select_columns:
            - source
            - taxyr
            - price_less_than_10k_growth_status
            - prev_year_price_less_than_10k_count
            - price_less_than_10k_count
          meta:
            table_name: sales
            category: sales_issues
            description: >
              count of sales <= $10k should not change more than 5% YoY
      - expression_is_true:
          name: qc_vw_change_in_high_low_value_sales_ratio_low
          expression: "price_greater_than_1m_growth_status = 'No significant change'"
          select_columns:
            - source
            - taxyr
            - price_greater_than_1m_growth_status
            - prev_year_price_greater_than_1m_count
            - price_greater_than_1m_count
          meta:
            table_name: sales
            category: sales_issues
            description: >
              count of sales >= $1m should not change more than 5% YoY

  - name: qc.vw_iasworld_sales_null_values
    description: '{{ doc("view_vw_iasworld_sales_null_values") }}'
    config:
      tags:
        - test_qc_sales
    columns:
      - name: buyer
        tests:
          - accepted_range: &sales-null-values
              name: qc_vw_iasworld_sales_null_values_buyer_null_proportion
              max_value: 0.1
              additional_select_columns: ["taxyr"]
              meta:
                table_name: sales
                category: sales_issues
                description: >
                  proportion of sales where buyer is null should not exceed 10%
      - name: deed_type
        tests:
          - accepted_range:
              name: qc_vw_iasworld_sales_null_values_deed_type_null_proportion
              meta:
                table_name: sales
                category: sales_issues
                description: >
                  proportion of sales where deed_type is null should not exceed 10%
              <<: *sales-null-values
      - name: price
        tests:
          - accepted_range:
              name: qc_vw_iasworld_sales_null_values_price_null_proportion
              meta:
                table_name: sales
                category: sales_issues
                description: >
                  proportion of sales where price is null should not exceed 10%
              <<: *sales-null-values
      - name: seller
        tests:
          - accepted_range:
              name: qc_vw_iasworld_sales_null_values_seller_null_proportion
              meta:
                table_name: sales
                category: sales_issues
                description: >
                  proportion of sales where seller is null should not exceed 10%
              <<: *sales-null-values

  - name: qc.vw_sale_mydec_null_values
    description: '{{ doc("view_vw_sale_mydec_null_values") }}'
    config:
      tags:
        - test_qc_sales
    columns:
      - name: address
        tests:
          - expression_is_true: &test-not-null
              name: qc_vw_mydec_sales_null_values_address_null_proportion
              expression: '< 0.1'
      - name: buyer
        tests:
          - expression_is_true:
              name: qc_vw_mydec_sales_null_values_buyer_null_proportion
              <<: *test-not-null
      - name: deed_type
        tests:
          - expression_is_true:
              name: qc_vw_mydec_sales_null_values_deed_type_null_proportion
              <<: *test-not-null
      - name: price
        tests:
          - expression_is_true:
              name: qc_vw_mydec_sales_null_values_price_null_proportion
              <<: *test-not-null
      - name: seller
        tests:
          - expression_is_true:
              name: qc_vw_mydec_sales_null_values_seller_null_proportion
              <<: *test-not-null

  - name: qc.vw_iasworld_sales_rowcount_matches_sale_mydec
    description: '{{ doc("view_vw_iasworld_sales_rowcount_matches_sale_mydec") }}'
    config:
      tags:
        - test_qc_sales
    columns:
      - name: comparison
        tests:
          - accepted_values:
              name: qc_vw_iasworld_sales_rowcount_matches_sale_mydec_check
              values: ['No significant difference']
              additional_select_columns: ["taxyr", "iasworld_sales", "mydec_sales"]
              meta:
                table_name: sales
                category: sales_issues
                description: >
                  the number of sales in iasworld for a given year should be within 5% of mydec

  - name: qc.vw_iasworld_sales_unmatched_joins_sale_mydec
    description: '{{ doc("view_vw_iasworld_sales_unmatched_joins_sale_mydec") }}'
    config:
      tags:
        - test_qc_sales
    columns:
      - name: mydec_unmatched
        tests:
          - accepted_range:
              name: qc_vw_iasworld_sales_unmatched_joins_sale_mydec_mydec_unmatched_lte_1000
              max_value: 1000
              additional_select_columns: ["taxyr"]
              meta:
                table_name: sales
                category: sales_issues
                description: mydec should not have >1000 sales that are not in iasworld
      - name: iasworld_unmatched
        tests:
          - accepted_range:
              name: qc_vw_iasworld_sales_unmatched_joins_sale_mydec_iasworld_unmatched_lte_1000
              max_value: 1000
              additional_select_columns: ["taxyr"]
              meta:
                table_name: sales
                category: sales_issues
                description: iasworld should not have >1000 sales that are not in mydec

  - name: qc.vw_iasworld_sales_day_of_month
    description: '{{ doc("view_vw_iasworld_sales_day_of_month") }}'
    config:
      tags:
        - test_qc_sales
    tests:
      - expression_is_true:
          name: qc_vw_iasworld_sales_day_of_month_lte_half_observations
          expression: sales_by_day > 0.5 * total_sales
          select_columns:
            - taxyr
            - day_of_month
            - sales_by_day
            - total_sales
          meta:
            table_name: sales
            category: sales_issues
            description: >
              no single day of the month should have > 50% of total sales

  - name: qc.vw_iasworld_sales_high_value_by_class
    description: '{{ doc("view_vw_iasworld_sales_high_value_by_class") }}'
    config:
      tags:
        - test_qc_sales
    columns:
      - name: price
        tests:
          - accepted_range:
              name: qc_vw_iasworld_sales_high_value_by_class_gt_20000000
              max_value: 20000000
              additional_select_columns: ["parid", "taxyr", "class", "who" , "wen"]
              meta:
                table_name: sales
                category: sales_issues
                description: price should be <= $20m

  - name: qc.vw_iasworld_sales_price_diff_sale_mydec
    description: '{{ doc("view_vw_iasworld_sales_price_diff_sale_mydec") }}'
    config:
      tags:
        - test_qc_sales
    tests:
      # Values of $1000 and below seem to get recoded to $1 in iasWorld
      - expression_is_true:
          name: qc_vw_iasworld_sales_price_diff_sale_mydec_gte_1000
          expression: ABS(price_iasworld - price_mydec) < 999
          select_columns:
            - taxyr
            - document_number
            - price_iasworld
            - price_mydec

  - name: qc.vw_pardat_nbhd_town_mismatch
    description: '{{ doc("view_vw_pardat_nbhd_town_mismatch") }}'
    config:
      tags:
        - test_qc_iasworld
    tests:
      - expression_is_true:
          name: qc_vw_pardat_nbhd_town_mismatch
          expression: false  # All rows in the view indicate test failures
          select_columns:
            - taxyr
            - parid
            - class
            - neighborhood_code
            - township_code
          meta:
            table_name: pardat
            category: relationships
            description: nbhd first two numbers should match township_code
