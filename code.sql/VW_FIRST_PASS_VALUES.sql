ALTER VIEW VW_FIRST_PASS_VALUES AS

/* first pass values */
SELECT DISTINCT HEADT.PIN, LEFT(HEADT.HD_TOWN, 2) AS TOWN, HEADT.TAX_YEAR AS [YEAR],
[MODEL RESULT], [PIPELINE RESULT],
(HD_ASS_BLD + HD_ASS_LND) * 10 AS [FIRST PASS], CERTIFIED,
CASE WHEN [APPEALED?] = 1 THEN 'YES' ELSE 'NO' END AS [APPEALED?],
[HOW MANY TIMES?],
CASE WHEN [CHANGED?] = 1 THEN 'YES' WHEN [CHANGED?] = 0 THEN 'NO' ELSE NULL END AS [CHANGED?] FROM AS_HEADT HEADT

LEFT JOIN
	/* second pass values */
	(SELECT PIN, (HD_ASS_BLD + HD_ASS_LND) * 10 AS CERTIFIED, TAX_YEAR FROM AS_HEADTB) HEADTB

ON HEADT.PIN = HEADTB.PIN AND HEADT.TAX_YEAR = HEADTB.TAX_YEAR

LEFT JOIN

	(SELECT
		/* appeals data */
		PIN, CASE WHEN PC_PIN_RESULT_1 = 'C' OR PC_PIN_RESULT_2 = 'C' OR PC_PIN_RESULT_3 = 'C' THEN 1 ELSE 0 END AS [CHANGED?],
		CASE WHEN PC_PIN_RESULT_3 != '' AND PC_PIN_RESULT_2 = '' THEN 1
		WHEN PC_PIN_RESULT_2 != '' AND PC_PIN_RESULT_1 = '' THEN 2
		WHEN PC_PIN_RESULT_1 != '' THEN 3
		ELSE 0 END AS [HOW MANY TIMES?],
		1 AS [APPEALED?], TAX_YEAR

	FROM APPEALSDATA) APPEALS

ON HEADT.PIN = APPEALS.PIN AND HEADT.TAX_YEAR = APPEALS.TAX_YEAR

LEFT JOIN 
/* model and pipeline values, need to make sure only values from the latest version are ingested */
(SELECT UNIVERSE.PIN, 2019 AS YEAR, fitted_value_1 AS [MODEL RESULT], fitted_value_6 AS [PIPELINE RESULT], CASE WHEN UNIVERSE.version IS NULL THEN 0 ELSE UNIVERSE.version END as VERSION
  FROM DTBL_MODELVALS AS UNIVERSE

INNER JOIN

(SELECT PIN, MAX(CASE WHEN version IS NULL THEN 0 ELSE VERSION END) AS VERSION
	FROM DTBL_MODELVALS
	GROUP BY PIN) MAX_VERSION

ON UNIVERSE.PIN = MAX_VERSION.PIN AND CASE WHEN UNIVERSE.version IS NULL THEN 0 ELSE UNIVERSE.version END = MAX_VERSION.VERSION) FITTED_VALUES

ON HEADT.PIN = FITTED_VALUES.PIN AND HEADT.TAX_YEAR = FITTED_VALUES.YEAR

WHERE HD_CLASS IN (200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 234, 241, 278, 295, 299)